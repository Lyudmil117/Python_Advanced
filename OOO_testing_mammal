class Mammal:
    def __init__(self, name, mammal_type, sound):
        self.name = name
        self.type = mammal_type
        self.sound = sound
        self.__kingdom = "animals"

    def make_sound(self):
        return f"{self.name} makes {self.sound}"

    def get_kingdom(self):
        return self.__kingdom

    def info(self):
        return f"{self.name} is of type {self.type}"

------------------------

from unittest import TestCase, main
from project.mammal import Mammal

class MammalTest(TestCase):
    def setUp(self) -> None:
        self.mammal = Mammal("Pile", "bird", "skuiik")

    def test_correct_initiation(self):
        self.assertEqual('Pile', self.mammal.name)
        self.assertEqual("bird", self.mammal.type)
        self.assertEqual("skuiik", self.mammal.sound)
        self.assertEqual('animals', self.mammal.get_kingdom())

    def test_if_sound_correct(self):
        self.assertEqual(self.mammal.make_sound(), "Pile makes skuiik")

    def test_getting_kingdom(self):
        self.assertEqual("animals", self.mammal.get_kingdom())

    def test_getting_info(self):
        self.assertEqual("Pile is of type bird", self.mammal.info())

if __name__ == '__main__':
    main()
